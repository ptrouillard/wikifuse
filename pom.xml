<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! (c) Copyright 2005-2015 JAXIO, http://www.jaxio.com
 ! Source code generated by Celerio, a Jaxio product
 ! Want to purchase Celerio ? email us at info@jaxio.com
 ! Follow us on twitter: @springfuse
 ! Documentation: http://www.jaxio.com/documentation/celerio/
 ! Template pack-backend-jpa:bootstrap/pom.boot.vm.xml
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sii.demo.wikifuse</groupId>
	<artifactId>wikifuse</artifactId>
	<packaging>jar</packaging>
	<version>1.0.0-SNAPSHOT</version>
	<name>wikifuse</name>
	<properties>
		<!-- ~~~~~~~~ -->
		<!-- Database -->
		<!-- ~~~~~~~~ -->
		<!-- Note: during development using the same value for your login, password, database name and project name is really convenient -->
		<database.name>${project.name}</database.name>
		<database.host>localhost</database.host>
		<database.user>${project.name}</database.user>
		<database.password>${project.name}</database.password>
		<!-- Default values when no database profile is set -->
		<!-- jdbc driver dependency -->
		<jdbc.groupId>org.postgresql</jdbc.groupId>
		<jdbc.artifactId>postgresql</jdbc.artifactId>
		<jdbc.version>8.2-504.jdbc3</jdbc.version>

		<!-- jdbc settings -->
		<jdbc.type>postgresql</jdbc.type>
		<jdbc.driver>org.postgresql.Driver</jdbc.driver>
		<jdbc.url>jdbc:postgresql://localhost/wikifuse</jdbc.url>
		<jdbc.user>sii</jdbc.user>
		<jdbc.password>sii</jdbc.password>
		<hibernate.dialect>org.hibernate.dialect.PostgreSQLDialect</hibernate.dialect>
		<sql-maven-plugin.delimiter>;</sql-maven-plugin.delimiter>
		<!-- ~~~~~~ -->
		<!-- System -->
		<!-- ~~~~~~ -->
		<jdk.version>1.6</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- Version dependencies when used in multiple dependencies -->
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<maven-celerio-plugin.outputDir>${project.basedir}</maven-celerio-plugin.outputDir>
		<maven-celerio-plugin.version>3.0.109</maven-celerio-plugin.version>
		<hibernate.version>4.2.6.Final</hibernate.version>
		<spring.version>3.2.4.RELEASE</spring.version>
		<spring-security.version>3.1.4.RELEASE</spring-security.version>
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- Variables substituted in resources file at build time -->
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- Log level, see by src/main/resource/log4j.properties -->
		<log.level>DEBUG</log.level>
		<log.sql.queries.level>DEBUG</log.sql.queries.level>
		<!-- hibernate, see by src/main/resource/hibernate.properties -->
		<hibernate.show.sql>true</hibernate.show.sql>
		<hibernate.format.sql>true</hibernate.format.sql>
		<hibernate.generate_statistics>true</hibernate.generate_statistics>
		<hibernate.use_sql_comments>true</hibernate.use_sql_comments>
		<hibernate.ehcache.configuration.file>ehcache.xml</hibernate.ehcache.configuration.file>
		<hibernate.use.second.level.cache>true</hibernate.use.second.level.cache>
		<hibernate.use.query.cache>true</hibernate.use.query.cache>
	</properties>
	<developers>
		<developer>
			<name>SpringFuse</name>
			<email>info@springfuse.com</email>
			<organization>Springfuse</organization>
			<organizationUrl>http://www.springfuse.com</organizationUrl>
		</developer>
	</developers>
	<profiles>
		<profile>
			<id>postgresql</id>
			<properties>
				<!-- jdbc driver dependency -->
				<jdbc.groupId>postgresql</jdbc.groupId>
				<jdbc.artifactId>postgresql</jdbc.artifactId>
				<jdbc.version>8.2-504.jdbc3</jdbc.version>
				<!-- jdbc settings -->
				<jdbc.type>postgresql</jdbc.type>
				<jdbc.driver>org.postgresql.Driver</jdbc.driver>
				<jdbc.url>jdbc:postgresql://${database.host}/${database.name}</jdbc.url>
				<jdbc.user>${database.user}</jdbc.user>
				<jdbc.password>${database.password}</jdbc.password>
				<!-- hibernate -->
				<hibernate.dialect>org.hibernate.dialect.PostgreSQLDialect</hibernate.dialect>
			</properties>
		</profile>
		<profile>
			<id>oracle</id>
			<properties>
				<!-- jdbc driver dependency -->
				<!-- Please deploy this driver in your local maven repository -->
				<jdbc.groupId>com.oracle</jdbc.groupId>
				<jdbc.artifactId>ojdbc14</jdbc.artifactId>
				<jdbc.version>10.2.0.3</jdbc.version>
				<!-- jdbc settings -->
				<jdbc.type>oracle</jdbc.type>
				<jdbc.driver>oracle.jdbc.driver.OracleDriver</jdbc.driver>
				<jdbc.url>jdbc:oracle:thin:@${database.host}:1521:XE</jdbc.url>
				<jdbc.catalog>${database.name}</jdbc.catalog>
				<jdbc.user>${database.user}</jdbc.user>
				<jdbc.password>${database.password}</jdbc.password>
				<!-- hibernate -->
				<hibernate.dialect>org.hibernate.dialect.Oracle10gDialect</hibernate.dialect>
				<!-- misc -->
				<sql-maven-plugin.delimiter>;</sql-maven-plugin.delimiter>
			</properties>
		</profile>
		<profile>
			<id>db2</id>
			<properties>
				<!-- jdbc driver dependency -->
				<!-- Please deploy this driver in your local maven repository -->
				<jdbc.groupId>com.ibm.db2</jdbc.groupId>
				<jdbc.artifactId>db2jcc4</jdbc.artifactId>
				<jdbc.version>9.7.0.4</jdbc.version>
				<!-- jdbc settings -->
				<jdbc.type>db2</jdbc.type>
				<jdbc.driver>com.ibm.db2.jcc.DB2Driver</jdbc.driver>
				<jdbc.url>jdbc:db2://${database.host}:50000/${database.name}</jdbc.url>
				<jdbc.user>${database.user}</jdbc.user>
				<jdbc.password>${database.password}</jdbc.password>
				<!-- hibernate -->
				<hibernate.dialect>org.hibernate.dialect.DB2Dialect</hibernate.dialect>
				<!-- misc -->
				<sql-maven-plugin.delimiter>;</sql-maven-plugin.delimiter>
			</properties>
			<dependencies>
				<!-- db2 License dependency -->
				<dependency>
					<groupId>com.ibm.db2</groupId>
					<artifactId>db2jcc_license_cu</artifactId>
					<version>9.7.0.4</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>mysql</id>
			<properties>
				<!-- jdbc driver dependency -->
				<jdbc.groupId>mysql</jdbc.groupId>
				<jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
				<jdbc.version>5.1.25</jdbc.version>
				<!-- jdbc settings -->
				<jdbc.type>mysql</jdbc.type>
				<jdbc.driver>com.mysql.jdbc.Driver</jdbc.driver>
				<!-- see http://dev.mysql.com/doc/refman/5.0/en/connector-j-reference-configuration-properties.html -->
				<jdbc.url>jdbc:mysql://${database.host}/${database.name}?zeroDateTimeBehavior=convertToNull</jdbc.url>
				<jdbc.catalog>${database.name}</jdbc.catalog>
				<jdbc.user>${database.user}</jdbc.user>
				<jdbc.password>${database.password}</jdbc.password>
				<!-- hibernate -->
				<hibernate.dialect>org.hibernate.dialect.MySQLInnoDBDialect</hibernate.dialect>
			</properties>
		</profile>
		<profile>
			<id>hsql</id>
			<properties>
				<!-- jdbc driver dependency -->
				<jdbc.groupId>org.hsqldb</jdbc.groupId>
				<jdbc.artifactId>hsqldb</jdbc.artifactId>
				<jdbc.version>2.2.9</jdbc.version>
				<!-- jdbc settings -->
				<jdbc.type>hsqldb</jdbc.type>
				<jdbc.driver>org.hsqldb.jdbcDriver</jdbc.driver>
				<jdbc.url>jdbc:hsqldb:file:${database.name}</jdbc.url>
				<jdbc.user>${database.user}</jdbc.user>
				<jdbc.password>${database.password}</jdbc.password>
				<!-- hibernate -->
				<hibernate.dialect>org.hibernate.dialect.HSQLDialect</hibernate.dialect>
			</properties>
		</profile>
		<profile>
			<id>h2</id>
			<properties>
				<!-- jdbc driver dependency -->
				<jdbc.groupId>com.h2database</jdbc.groupId>
				<jdbc.artifactId>h2</jdbc.artifactId>
				<jdbc.version>1.3.171</jdbc.version>
				<!-- jdbc settings -->
				<jdbc.type>h2</jdbc.type>
				<jdbc.driver>org.h2.Driver</jdbc.driver>
				<jdbc.url>jdbc:h2:~/.h2/${database.name};MVCC=TRUE;FILE_LOCK=NO</jdbc.url>
				<jdbc.user>${database.user}</jdbc.user>
				<jdbc.password>${database.password}</jdbc.password>
				<!-- hibernate -->
				<hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
			</properties>
		</profile>
		<profile>
			<id>derby</id>
			<properties>
				<!-- jdbc driver dependency -->
				<jdbc.groupId>org.apache.derby</jdbc.groupId>
				<jdbc.artifactId>derby</jdbc.artifactId>
				<jdbc.version>10.10.1.1</jdbc.version>
				<!-- jdbc settings -->
				<jdbc.type>derby</jdbc.type>
				<jdbc.driver>org.apache.derby.jdbc.EmbeddedDriver</jdbc.driver>
				<jdbc.url>jdbc:derby:${database.name};create=true</jdbc.url>
				<jdbc.user>${database.user}</jdbc.user>
				<jdbc.password>${database.password}</jdbc.password>
				<!-- hibernate -->
				<hibernate.dialect>org.hibernate.dialect.DerbyTenSevenDialect</hibernate.dialect>
				<!-- misc -->
				<sql-maven-plugin.delimiter>;</sql-maven-plugin.delimiter>
			</properties>
		</profile>
		<profile>
			<!-- ~~~~~~~~~~~~~~~~~~~ -->
			<!-- Disable debug modes -->
			<!-- ~~~~~~~~~~~~~~~~~~~ -->
			<id>perf</id>
			<properties>
				<hibernate.show.sql>false</hibernate.show.sql>
				<hibernate.format.sql>false</hibernate.format.sql>
				<hibernate.use_sql_comments>false</hibernate.use_sql_comments>
				<hibernate.generate_statistics>false</hibernate.generate_statistics>
				<log.level>WARN</log.level>
				<log.sql.queries.level>WARN</log.sql.queries.level>
			</properties>
		</profile>
		<!--  convenient profile to drop/create a db user (e.g. Oracle) -->
		<profile>
			<id>create-db-user</id>
			<build>
				<plugins>
					<!-- Execute the scripts -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.5</version>
							<executions>
								<execution>
									<id>create-oracle-user</id>
									<phase>validate</phase>
									<configuration>
										<driver>${jdbc.driver}</driver>
										<url>${jdbc.url}</url>
										<username>system</username>
										<password>manager</password>
										<autocommit>true</autocommit>
										<sqlCommand><![CDATA[
DROP USER ${database.user} CASCADE;
CREATE USER ${database.user} IDENTIFIED BY ${database.password};
GRANT CONNECT, RESOURCE TO ${database.user};
 ]]>
										</sqlCommand>
										<print>true</print>
										<printResultSet>true</printResultSet>
										<onError>continue</onError>
									</configuration>
									<goals>
										<goal>execute</goal>
									</goals>
								</execution>
							</executions>
							<dependencies>
								<dependency>
									<groupId>${jdbc.groupId}</groupId>
									<artifactId>${jdbc.artifactId}</artifactId>
									<version>${jdbc.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<!-- Drop and recreate the database -->
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<id>db</id>
			<build>
				<defaultGoal>initialize</defaultGoal>
				<plugins>
					<plugin>
						<!-- http://mojo.codehaus.org/sql-maven-plugin/ -->
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>Create and initialize the database</id>
								<phase>initialize</phase>
								<configuration>
							<driver>${jdbc.driver}</driver>
							<url>${jdbc.url}</url>
							<username>${jdbc.user}</username>
							<password>${jdbc.password}</password>
							<autocommit>true</autocommit>
							<encoding>UTF-8</encoding>
							<print>true</print>
							<printResultSet>true</printResultSet>
							<onError>continue</onError>
							<delimiter>${sql-maven-plugin.delimiter}</delimiter>
							<orderFile>ascending</orderFile>
							<fileset>
								<basedir>${project.basedir}</basedir>
								<includes>
									<include>src/main/sql/${jdbc.type}/*.sql</include>
								</includes>
							</fileset>
						</configuration>
						<goals>
									<goal>execute</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>${jdbc.groupId}</groupId>
								<artifactId>${jdbc.artifactId}</artifactId>
								<version>${jdbc.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Profiles below are used when Celerio Maven Plugin is present in the build process -->
		<profile>
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<!-- Extract the database metadata -->
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<id>metadata</id>
			<build>
				<defaultGoal>generate-sources</defaultGoal>
				<plugins>
					<plugin>
						<groupId>com.jaxio.celerio</groupId>
						<artifactId>maven-dbmetadata-plugin</artifactId>
						<version>${maven-celerio-plugin.version}</version>
						<executions>
							<execution>
								<id>Extract the database schema.</id>
								<goals>
									<goal>extract-metadata</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>${jdbc.groupId}</groupId>
								<artifactId>${jdbc.artifactId}</artifactId>
								<version>${jdbc.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
			<repositories>
				<repository>
					<id>springfuse-repository</id>
					<url>http://maven2.springfuse.com/</url>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>springfuse-repository</id>
					<url>http://maven2.springfuse.com/</url>
				</pluginRepository>
			</pluginRepositories>
		</profile>
		<profile>
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<!-- Generate the code using Celerio -->
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<id>gen</id>
			<build>
				<defaultGoal>generate-sources</defaultGoal>
				<plugins>
					<plugin>
						<groupId>com.jaxio.celerio</groupId>
						<artifactId>maven-celerio-plugin</artifactId>
						<version>${maven-celerio-plugin.version}</version>
						<executions>
							<execution>
								<id>Generates files using the extracted database schema.</id>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>com.jaxio.celerio.packs</groupId>
								<artifactId>backend-jpa</artifactId>
								<version>${maven-celerio-plugin.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
			<repositories>
				<repository>
					<id>springfuse-repository</id>
					<url>http://maven2.springfuse.com/</url>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>springfuse-repository</id>
					<url>http://maven2.springfuse.com/</url>
				</pluginRepository>
			</pluginRepositories>
		</profile>
		<profile>
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<!-- Delete code generated by Celerio -->
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<id>cleanGen</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.jaxio.celerio</groupId>
						<artifactId>maven-celerio-plugin</artifactId>
						<version>${maven-celerio-plugin.version}</version>
						<executions>
							<execution>
								<id>Delete previously generated files (use .celerio/ folder)</id>
								<goals>
									<goal>cleanGenerated</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<repositories>
				<repository>
					<id>springfuse-repository</id>
					<url>http://maven2.springfuse.com/</url>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>springfuse-repository</id>
					<url>http://maven2.springfuse.com/</url>
				</pluginRepository>
			</pluginRepositories>
		</profile>
	</profiles>
	<!-- ~~~~~~~~~~~~ -->
	<!-- DEPENDENCIES -->
	<!-- ~~~~~~~~~~~~ -->
	<dependencies>
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- List your specific dependencies below -->
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- Dependencies needed by the generated project -->
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.3</version>
		</dependency>
		<dependency>
			<groupId>org.jadira.usertype</groupId>
			<artifactId>usertype.core</artifactId>
			<version>3.0.0.GA</version>
		</dependency>
		<!-- ~~~~~~~~~~~ -->
		<!-- PERSISTENCE -->
		<!-- ~~~~~~~~~~~ -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
			<version>7.0.42</version>
		</dependency>
		<dependency>
			<!-- jdbc driver depends on the database profile used -->
			<groupId>${jdbc.groupId}</groupId>
			<artifactId>${jdbc.artifactId}</artifactId>
			<version>${jdbc.version}</version>
		</dependency>
		<!-- ~~~~~~~~~~~~~~~~ -->
		<!-- HIBERNATE SEARCH -->
		<!-- ~~~~~~~~~~~~~~~~ -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search</artifactId>
			<version>4.3.0.Final</version>
			<exclusions>
				<exclusion>
					<artifactId>lucene-kuromoji</artifactId>
					<groupId>org.apache.lucene</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-parsers</artifactId>
			<version>1.4</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.12</version>
		</dependency>
		<!-- ~~~~~~~~~~ -->
		<!-- VALIDATION -->
		<!-- ~~~~~~~~~~ -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.3.1.Final</version>
		</dependency>
		<dependency> <!-- validation html -->
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.7.2</version>
		</dependency>
		<!-- ~~~~~~ -->
		<!-- LOGGER -->
		<!-- ~~~~~~ -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.13</version>
		</dependency>
		<!-- ~~~~~ -->
		<!-- UTILS -->
		<!-- ~~~~~ -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>15.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.8.3</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<!-- ~~~~~~ -->
		<!-- SPRING -->
		<!-- ~~~~~~ -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.7.3</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.7.3</version>
		</dependency>
		<!-- ~~~~~~~~~~~~~~~ -->
		<!-- SPRING SECURITY -->
		<!-- ~~~~~~~~~~~~~~~ -->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-acl</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<!-- ~~~~~~~~~~ -->
		<!-- MONITORING -->
		<!-- ~~~~~~~~~~ -->
		<dependency>
			<groupId>net.bull.javamelody</groupId>
			<artifactId>javamelody-core</artifactId>
			<version>1.47.0</version>
		</dependency>
		<!-- ~~~~ -->
		<!-- TEST -->
		<!-- ~~~~ -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert</artifactId>
			<version>1.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- ~~~~~~~~~~~~ -->
		<!-- JAVA UTILITY -->
		<!-- ~~~~~~~~~~~~ -->
		<dependency>
			<groupId>com.github.peichhorn</groupId>
			<artifactId>lombok-pg</artifactId>
			<version>0.11.0</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<!-- ~~~~~~~~~~~~ -->
	<!-- REPOSITORIES -->
	<!-- ~~~~~~~~~~~~ -->
	<pluginRepositories>
		<pluginRepository>
			<id>Codehaus Snapshots</id>
			<url>https://nexus.codehaus.org/content/repositories/releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<repositories>
		<repository>
			<id>repository.jboss.org</id>
			<url>http://repository.jboss.org/nexus/content/groups/public-jboss</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<!-- ~~~~~ -->
	<!-- BUILD -->
	<!-- ~~~~~ -->
	<build>
		<defaultGoal>test</defaultGoal>
		<resources>
			<resource>
				<directory>${maven-celerio-plugin.outputDir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${maven-celerio-plugin.outputDir}/src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-resources-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<delimiters>
						<delimiter>@*@</delimiter>
					</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
					<nonFilteredFileExtensions>
						<nonFilteredFileExtension>xls</nonFilteredFileExtension>
						<nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
						<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-enforcer-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<execution>
						<id>enforce-java</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<version>[1.6.0-26,)</version>
								</requireJavaVersion>
								<requireMavenVersion>
									<version>3.0.3</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-compiler-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<compilerArgument>-Xlint</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://mojo.codehaus.org/build-helper-maven-plugin/ -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>Adding generated java folder to build</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${maven-celerio-plugin.outputDir}/src/main/java</source>
								<source>${maven-celerio-plugin.outputDir}/src/main/generated-java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>Adding generated java test location to test build</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${maven-celerio-plugin.outputDir}/src/test/java</source>
								<source>${maven-celerio-plugin.outputDir}/src/test/generated-java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-idea-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-idea-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<jdkLevel>${jdk.version}</jdkLevel>
					<dependenciesAsLibraries>true</dependenciesAsLibraries>
					<useFullNames>false</useFullNames>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-eclipse-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-install-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-clean-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-surefire-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.4</version>
				<configuration>
					<!-- surefire uses a new jvm, MAVEN_OPTS are ignored, so you better set the memory options here -->
					<argLine>-Xmx512m -XX:MaxPermSize=256m</argLine>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-failsafe-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.12</version>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-release-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.2.2</version>
				<configuration>
					<arguments>-Pdb,metadata,gen</arguments>
					<releaseProfiles>db,metadata,gen</releaseProfiles>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>

